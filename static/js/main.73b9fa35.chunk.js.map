{"version":3,"sources":["logo.svg","components/UserCard.js","components/Repos.js","context/UserContext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","layout/Footer.js","layout/Header.js","App.js","Config/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","CardBody","name","location","bio","hireable","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","language","description","id","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signup","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Signin","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73b9fa35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\n\nconst UserCard = ({ user }) => {\n  return (\n    <Card className=\"text-center mt-3 mb-4\">\n      <img src={user.avatar_url} className=\"img-thumbnail\" />\n      <CardBody>\n        <div className=\"text-primary\">{user.name}</div>\n        <div className=\"text-primary\">{user.location}</div>\n        <div className=\"text-primary\">{user.bio}</div>\n        <div className=\"text-info\">\n          Available for hire: {user.hireable ? \"YES\" : \"NOPE\"}\n        </div>\n        <div className=\"text-info\">Followers {user.followers}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\n\nconst Repos = ({ repos_url }) => {\n  const [repos, setRepos] = useState([]);\n\n  const fetchRepos = async () => {\n    const { data } = await Axios.get(repos_url);\n    setRepos(data);\n  };\n\n  useEffect(() => {\n    fetchRepos();\n  }, [repos_url]);\n\n  return (\n    <ListGroup>\n      {repos.map(repo => (\n        <ListGroupItem key={repo.id}>\n          <div className=\"text-primary\">{repo.name}</div>\n          <div className=\"text-secondary\">{repo.language}</div>\n          <div className=\"text-info\">{repo.description}</div>\n        </ListGroupItem>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default Repos;\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext();\n","import React, { useState, useContext } from \"react\";\nimport Axios from \"axios\";\n\nimport {\n  Row,\n  Container,\n  Col,\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n\nimport UserCard from \"../components/UserCard\";\nimport Repos from \"../components/Repos\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport { toast } from \"react-toastify\";\n\nconst Home = () => {\n  const context = useContext(UserContext);\n  const [query, setQuery] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const fetchDetails = async () => {\n    try {\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\n      setUser(data);\n      console.log({ data });\n    } catch (eror) {\n      toast(\"Not able to locate user\", { type: \"error\" });\n    }\n  };\n\n  //PUt Anypage behind login\n\n  if (!context.user?.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return (\n    <Container>\n      <Row className=\" mt-3\">\n        <Col md=\"5\">\n          <InputGroup>\n            <Input\n              type=\"text\"\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n              placeholder=\"Please provide the username\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={fetchDetails} color=\"primary\">\n                Fetch User\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          {user ? <UserCard user={user} /> : null}\n        </Col>\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Col,\n  Input,\n  Row,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader\n} from \"reactstrap\";\n\nimport firebase from \"firebase/app\";\nimport { UserContext } from \"../context/UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Signup = () => {\n  const context = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignUp = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(res => {\n        console.log(res);\n        context.setUser({ email: res.user.email, uid: res.user.uid });\n      })\n      .catch(error => {\n        console.log(error);\n        toast(error.message, {\n          type: \"error\"\n        });\n      });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSignUp();\n  };\n\n  if (context.user?.uid) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Container className=\"text-center\">\n      <Row>\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\n          <Card>\n            <Form onSubmit={handleSubmit}>\n              <CardHeader className=\"\">Signin here</CardHeader>\n              <CardBody>\n                <FormGroup row>\n                  <Label for=\"email\" sm={3}>\n                    Email\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"provide your email\"\n                      value={email}\n                      onChange={e => setEmail(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"password\" sm={3}>\n                    Password\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"your password here\"\n                      value={password}\n                      onChange={e => setPassword(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n              </CardBody>\n              <CardFooter>\n                <Button type=\"submit\" block color=\"primary\">\n                  Sign In\n                </Button>\n              </CardFooter>\n            </Form>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Col,\n  Input,\n  Row,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader\n} from \"reactstrap\";\n\nimport firebase from \"firebase/app\";\nimport { UserContext } from \"../context/UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Signup = () => {\n  const context = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignUp = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(res => {\n        console.log(res);\n        context.setUser({ email: res.user.email, uid: res.user.uid });\n      })\n      .catch(error => {\n        console.log(error);\n        toast(error.message, {\n          type: \"error\"\n        });\n      });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSignUp();\n  };\n\n  if (context.user?.uid) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Container className=\"text-center\">\n      <Row>\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\n          <Card>\n            <Form onSubmit={handleSubmit}>\n              <CardHeader className=\"\">Signup here</CardHeader>\n              <CardBody>\n                <FormGroup row>\n                  <Label for=\"email\" sm={3}>\n                    Email\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"provide your email\"\n                      value={email}\n                      onChange={e => setEmail(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"password\" sm={3}>\n                    Password\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"your password here\"\n                      value={password}\n                      onChange={e => setPassword(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n              </CardBody>\n              <CardFooter>\n                <Button type=\"submit\" block color=\"primary\">\n                  Sign Up\n                </Button>\n              </CardFooter>\n            </Form>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\n\nconst PageNotFound = () => {\n  return (\n    <div>\n      <h1>PageNotFound page</h1>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nconst Footer = () => {\n  return (\n    <Container\n      fluid\n      tag=\"footer\"\n      className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3\"\n    >\n      LCO Github search App with Firebase\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/UserContext\";\n\nconst Header = () => {\n  const context = useContext(UserContext);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"info\" light expand=\"md\">\n      <NavbarBrand>\n        <Link to=\"/\" className=\"text-white\">\n          LCO gitfire app\n        </Link>\n      </NavbarBrand>\n      <NavbarText className=\"text-white\">\n        {context.user?.email ? context.user.email : \"\"}\n      </NavbarText>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          {context.user ? (\n            <NavItem>\n              <NavLink\n                onClick={() => {\n                  context.setUser(null);\n                }}\n                className=\"text-white\"\n              >\n                Logout\n              </NavLink>\n            </NavItem>\n          ) : (\n            <>\n              <NavItem>\n                <NavLink tag={Link} to=\"/signup\" className=\"text-white\">\n                  Signup\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/signin\" className=\"text-white\">\n                  Signin\n                </NavLink>\n              </NavItem>\n            </>\n          )}\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//react-router\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n//firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//components\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport { UserContext } from \"./context/UserContext\";\nimport Footer from \"./layout/Footer\";\nimport Header from \"./layout/Header\";\n\nimport firebaseConfig from \"./Config/FirebaseConfig\";\n//init firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\n  apiKey: \"AIzaSyCmufAJqCuINCW_UwnbPiom2_7AMLjyMlg\",\n  authDomain: \"mygitapp-react.firebaseapp.com\",\n  projectId: \"mygitapp-react\",\n  storageBucket: \"mygitapp-react.appspot.com\",\n  messagingSenderId: \"682645721398\",\n  appId: \"1:682645721398:web:abb3dfb5cf33f142e06397\",\n  measurementId: \"G-3PX0CXQNLS\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}